/* Set reusable theme variables (dark mode by default) */
:root {
  --rounded: 0.5em;
  /* Colors are roughly based on this palette: https://coolors.co/palette/0d1b2a-1b263b-415a77-778da9-e0e1dd */
  --color-text: #dfe5ec;
  --color-bg: #0d1b2a;
  --color-border: #415a77;
  --color-highlight: #778da9;
}

/* Light mode */
@media (prefers-color-scheme: light) {
  :root {
    --color-text: #0d1b2a;
    --color-bg: #e5edf7;
    --color-border: #415a77;
    --color-highlight: #778da9;
  }
}

/* Minimal CSS reset */
* {
  margin: 0;
  color: var(--color-text);
  &,
  &:before,
  &:after {
    box-sizing: border-box;
  }
}

body {
  background: var(--color-bg);
  /* https://systemfontstack.com/ */
  font-family:
    -apple-system,
    BlinkMacSystemFont,
    avenir next,
    avenir,
    segoe ui,
    helvetica neue,
    Adwaita Sans,
    Cantarell,
    Ubuntu,
    roboto,
    noto,
    helvetica,
    arial,
    sans-serif;
  /* More readable line height */
  line-height: 1.5;
  /* Use fixed font size on body so that we can use `em` units for all sizes */
  font-size: 16px;
  padding: 0 1em;
}

main {
  max-width: 960px;
  margin: 0 auto;
}

h1 {
  margin: 1em 0 0.5em 0;
}

table {
  border-spacing: 0 1em;
}

td {
  /* This hack allows us to use `height: 100%` for inputs inside table cells */
  height: 1px;
}

td + td {
  /* Padding is used insteade of border-spacing to avoid border gap */
  padding-left: 2em;
}

tr + tr td {
  padding-top: 1em;
  border-top: var(--color-border) solid 1px;
}

input,
button,
textarea,
select {
  font: inherit;
}

input {
  width: 100%;
}

input,
input::file-selector-button,
button {
  color: inherit;
  background: transparent;
  border: var(--color-border) solid 1px;
  border-radius: var(--rounded);
  padding: 0.5em 1em;
  height: 100%;
}

input[type="file"] {
  /* Negate padding for file input in favor of `::file-selector-button` padding
  */
  padding: 0;
}

input::file-selector-button {
  /* More space between file input button and text */
  margin-right: 1em;
}

/*
  Make read-only inputs not look like inputs.

  Also, here's a fun fact: `file` inputs are `read-only` by default. Since we
  want the file input to show up its focus ring when focused with tab for
  accessibility reasons, we need to exclude it from this selector.
 */
input:not([type="file"]:focus-visible):read-only {
  border-color: transparent;
  outline: none;
}

/* Button group */
div[role="group"] {
  display: flex;
  button {
    border-radius: 0;

    &:first-child {
      border-radius: var(--rounded) 0 0 var(--rounded);
    }

    & + button {
      border-left: 0;
    }

    &:last-child {
      border-radius: 0 var(--rounded) var(--rounded) 0;
    }
  }
}

/* Match file input and upload button height */
button,
input::file-selector-button {
  height: 100%;
}

button:hover:not(:disabled),
input::file-selector-button:hover {
  background: var(--color-highlight);
  cursor: pointer;
}

button:disabled {
  opacity: 0.75;
}
